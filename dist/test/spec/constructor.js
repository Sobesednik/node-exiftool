'use strict';

require('source-map-support/register');

var assert = require('assert');
var context = require('exiftool-context');
var exiftool = require('../../src/');
context.globalExiftoolConstructor = exiftool.ExiftoolProcess;

var constructorTestSuite = {
    context: context,
    'creates new ExiftoolProcess instance with default bin': function createsNewExiftoolProcessInstanceWithDefaultBin(ctx) {
        var ep = new exiftool.ExiftoolProcess();
        assert(ep instanceof exiftool.ExiftoolProcess);
        assert.equal(ep._bin, exiftool.EXIFTOOL_PATH);
        assert.equal(ep._bin, ctx.defaultBin);
    },
    'instance\'s isOpen getter returns false': function instanceSIsOpenGetterReturnsFalse(ctx) {
        ctx.create();
        assert(!ctx.ep.isOpen);
    },
    'creates new ExiftoolProcess object with specific bin': function createsNewExiftoolProcessObjectWithSpecificBin(ctx) {
        var bin = '/usr/local/my-exiftool';
        ctx.create(bin);
        assert.equal(ctx.ep._bin, bin);
    }
};

module.exports = constructorTestSuite;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Rlc3Qvc3BlYy9jb25zdHJ1Y3Rvci5qcyJdLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiY29udGV4dCIsImV4aWZ0b29sIiwiZ2xvYmFsRXhpZnRvb2xDb25zdHJ1Y3RvciIsIkV4aWZ0b29sUHJvY2VzcyIsImNvbnN0cnVjdG9yVGVzdFN1aXRlIiwiY3R4IiwiZXAiLCJlcXVhbCIsIl9iaW4iLCJFWElGVE9PTF9QQVRIIiwiZGVmYXVsdEJpbiIsImNyZWF0ZSIsImlzT3BlbiIsImJpbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFNQSxTQUFTQyxRQUFRLFFBQVIsQ0FBZjtBQUNBLElBQU1DLFVBQVVELFFBQVEsa0JBQVIsQ0FBaEI7QUFDQSxJQUFNRSxXQUFXRixRQUFRLFlBQVIsQ0FBakI7QUFDQUMsUUFBUUUseUJBQVIsR0FBb0NELFNBQVNFLGVBQTdDOztBQUVBLElBQU1DLHVCQUF1QjtBQUN6Qkosb0JBRHlCO0FBRXpCLDZEQUF5RCx5REFBQ0ssR0FBRCxFQUFTO0FBQzlELFlBQU1DLEtBQUssSUFBSUwsU0FBU0UsZUFBYixFQUFYO0FBQ0FMLGVBQU9RLGNBQWNMLFNBQVNFLGVBQTlCO0FBQ0FMLGVBQU9TLEtBQVAsQ0FBYUQsR0FBR0UsSUFBaEIsRUFBc0JQLFNBQVNRLGFBQS9CO0FBQ0FYLGVBQU9TLEtBQVAsQ0FBYUQsR0FBR0UsSUFBaEIsRUFBc0JILElBQUlLLFVBQTFCO0FBQ0gsS0FQd0I7QUFRekIsK0NBQTJDLDJDQUFDTCxHQUFELEVBQVM7QUFDaERBLFlBQUlNLE1BQUo7QUFDQWIsZUFBTyxDQUFDTyxJQUFJQyxFQUFKLENBQU9NLE1BQWY7QUFDSCxLQVh3QjtBQVl6Qiw0REFBd0Qsd0RBQUNQLEdBQUQsRUFBUztBQUM3RCxZQUFNUSxNQUFNLHdCQUFaO0FBQ0FSLFlBQUlNLE1BQUosQ0FBV0UsR0FBWDtBQUNBZixlQUFPUyxLQUFQLENBQWFGLElBQUlDLEVBQUosQ0FBT0UsSUFBcEIsRUFBMEJLLEdBQTFCO0FBQ0g7QUFoQndCLENBQTdCOztBQW1CQUMsT0FBT0MsT0FBUCxHQUFpQlgsb0JBQWpCIiwiZmlsZSI6ImNvbnN0cnVjdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0JylcbmNvbnN0IGNvbnRleHQgPSByZXF1aXJlKCdleGlmdG9vbC1jb250ZXh0JylcbmNvbnN0IGV4aWZ0b29sID0gcmVxdWlyZSgnLi4vLi4vc3JjLycpXG5jb250ZXh0Lmdsb2JhbEV4aWZ0b29sQ29uc3RydWN0b3IgPSBleGlmdG9vbC5FeGlmdG9vbFByb2Nlc3NcblxuY29uc3QgY29uc3RydWN0b3JUZXN0U3VpdGUgPSB7XG4gICAgY29udGV4dCxcbiAgICAnY3JlYXRlcyBuZXcgRXhpZnRvb2xQcm9jZXNzIGluc3RhbmNlIHdpdGggZGVmYXVsdCBiaW4nOiAoY3R4KSA9PiB7XG4gICAgICAgIGNvbnN0IGVwID0gbmV3IGV4aWZ0b29sLkV4aWZ0b29sUHJvY2VzcygpXG4gICAgICAgIGFzc2VydChlcCBpbnN0YW5jZW9mIGV4aWZ0b29sLkV4aWZ0b29sUHJvY2VzcylcbiAgICAgICAgYXNzZXJ0LmVxdWFsKGVwLl9iaW4sIGV4aWZ0b29sLkVYSUZUT09MX1BBVEgpXG4gICAgICAgIGFzc2VydC5lcXVhbChlcC5fYmluLCBjdHguZGVmYXVsdEJpbilcbiAgICB9LFxuICAgICdpbnN0YW5jZVxcJ3MgaXNPcGVuIGdldHRlciByZXR1cm5zIGZhbHNlJzogKGN0eCkgPT4ge1xuICAgICAgICBjdHguY3JlYXRlKClcbiAgICAgICAgYXNzZXJ0KCFjdHguZXAuaXNPcGVuKVxuICAgIH0sXG4gICAgJ2NyZWF0ZXMgbmV3IEV4aWZ0b29sUHJvY2VzcyBvYmplY3Qgd2l0aCBzcGVjaWZpYyBiaW4nOiAoY3R4KSA9PiB7XG4gICAgICAgIGNvbnN0IGJpbiA9ICcvdXNyL2xvY2FsL215LWV4aWZ0b29sJ1xuICAgICAgICBjdHguY3JlYXRlKGJpbilcbiAgICAgICAgYXNzZXJ0LmVxdWFsKGN0eC5lcC5fYmluLCBiaW4pXG4gICAgfSxcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb25zdHJ1Y3RvclRlc3RTdWl0ZVxuIl19